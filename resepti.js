// Author ittnaDevs/*    version 1.0, 10.03.2016 // .js luotu    version 1.3, 16.03.2016 // T1 valmis.    version 1.4, 16.03.2016 // T3 alkaa.    version 1.5, 17.03.2016 // T3 jatkuu.    version 1.6, 18.03.2016 // T3 valmis.    version 1.7, 18.03.2016 // T5 alkaa.    version 1.8, 19.03.2016 // T5 jatkuu. Kokeile laittaa kaksi formia lomakkeelle ja hoitaa kirjautuminen sitä kautta. Nyt käy jostain syystä aina uudelleen tarkistamassa kirjautumisen.    version 1.9, 21.03.2016 // T5 jatkuu. sessionStorage vs. localStorage    version 1.10, 21.03.2016 // T5 jatkuu. Vielä jäi vähän kesken.*/AVAIN = 'A_STRING_TO_BE_A_KEY_FOR_SESSION_DATA'URLA = '/A/PATH/TO/BIN(cgi-bin)/WHERE/THERE/IS/reseptiflask.cgi/'window.onload = function(){    alustus();}function alustus(){    //set up or init    hae_login_ajax();}function img_show(){    // show wheel-of-doom    $('#img').show();}function img_hide(){    // hide wheel-of-doom    $('#img').hide();}function hae_login_ajax(){    // e.preventDefault();    //fetches log-in page.    console.log('alun kirjautumislomakkeen hakeminen.');    //var resepti = {'alustus':"ALUSTA"};    var virhe = sessionStorage.getItem(AVAIN+'epaonnistui');    console.log(virhe);    $.ajax({        async:true,        type:'POST',        url:URLA + 'login',        dataType:'xml',        data:{'alustus':'ALUSTA', 'virhe':virhe},        beforeSend:img_show,    //original idea: http://stackoverflow.com/questions/4684722/show-loading-image-while-ajax-is-performed        complete:img_hide,        success:alustaminen,        error: ajax_virhe    });}function alustaminen(data, textStatus, request){    // Vaihdetaan kirjautumislomake nettisivulle ja liitetään tapahtuman käsittelijä    console.log('Päästy alustaminen aliohjelmaan.');    var select = document.importNode(request.responseXML.documentElement, 1);    var id = select.getAttribute('id');    $('#' +id).replaceWith(select);    $('input[name="Kirjaudu"]').on('click', tarkista_kayttaja);}function tarkista_kayttaja(e){    e.preventDefault();    console.log("klikattu tarkistusnappia.");    var kayttaja = {tunnus:$('input[type="text"]').val(),salasana:$('input[type="password"]').val()}    $.ajax({        async:true,        type:'POST',        url:URLA + 'login_tarkistus',        dataType:'json',        data:kayttaja,        beforeSend:img_show,        complete:img_hide,        success:tarkistuksen_tulos,        error: ajax_virhe    });}function tarkistuksen_tulos(data, textStatus, request){    console.log("päästy tarkistuksen_tulos aliohjelmaan");    console.log(data);    if (data['virhe'] == "" & data['tulokset'] == 'OK') {        sessionStorage.setItem(AVAIN+'session',data['kirjautunut']);        hae_resepti_lomake();    }    else {        $('input[type="text"]').val("");        $('input[type="password"]').val("");        $('#virhe').text(data['virhe']);    }}function hae_resepti_lomake(){    // Hakee resepti_lomakkeen    console.log('hae_resepti_lomake');    $.ajax({        async:true,        type:'POST',        url:URLA+'hae_index',        dataType:'xml',        data:{'alustus':'LOMAKE'},        beforeSend:img_show,    // jos tässä olisi sulkeet ei pelaisi        complete:img_hide,        success:lomakkeen_tulos,        error:ajax_virhe    });}function lomakkeen_tulos(data, textStatus, request){    console.log("päästy lomakkeen_tulos aliohjelmaan");    console.log(data);    var select = document.importNode(request.responseXML.documentElement, 1);    var id = select.getAttribute('id');    $('#' +id).replaceWith(select);    hae_reseptit();    console.log("reseptit");    hae_ruokalajit();    console.log("ruokalajit");    $('input[name="lisaa"]').on('click', lisaa_resepti);    console.log("lisaa_resepti");    $('input[name="peruuta"]').on('click', peruuta_muutokset);    console.log("peruuta_muutokset");    console.log("valmis");}// Lisaa uuden reseptin tietokantaan.function lisaa_resepti(e){    e.preventDefault();    console.log('Nappulaa painettu.');    if ($('input[name="lisaa"]').val() == 'RESEPTI') {        lisaa_resepti_ajax(e);    }    else if ($('input[name="lisaa"]').val() == 'TALLENNA') {        paivita_resepti_ajax(e);    }}function peruuta_muutokset(e){    //tyhjentää täydennyskentät ja palauttaa lisaa napin nimen.    e.preventDefault();    tyhjenna();}function tyhjenna(){    //tyhjentää oikeasti kentät    $('#nappula_lisaa').attr('value','RESEPTI');    var teksti_kentat = $('input[type="text"]');    for (var i = 0; i < teksti_kentat.length; i++) {        $(teksti_kentat[i]).val("");    }    $('input[type="number"]').val(1);    $('#Lisaa_resepti_error').text("");}function muokkaa_reseptia(e){    // Siirtää/hakee reseptin tiedot muokattavaksi    e.preventDefault();    var reseptin_id = $(this).attr('data-id');    var resepti = {r_id:reseptin_id, aliohjelma:'MUOKKAA'}    console.log('a:ta painettu.');    console.log('reseptin_id: ' + reseptin_id);    $.ajax({        async:true,        type:'POST',        url:URLA,        dataType:'json',        data:resepti,        beforeSend:img_show,    // jos tässä olisi sulkeet ei pelaisi        complete:img_hide,        success:haku_tulos,        error: ajax_virhe    });}function haku_tulos(data, textStatus, request){    //Laittaa haetun reseptin tiedot paikalleen lomakkeella    // Siistitään vähän dataobjektia    var muokattava_resepti = siisti(data);    $('input[name="reseptin_nimi"]').val(muokattava_resepti['nimi']);    $('input[name="reseptin_kuvaus"]').val(muokattava_resepti['kuvaus']);    $('input[name="reseptin_henkilomaara"]').val(muokattava_resepti['henkilomaara']);    $('#Ruokalajitlista').val(muokattava_resepti['ruokalajiid']);    console.log('Haku_tulokseen päästy.');    console.log(data);    $('#nappula_lisaa').attr('value','TALLENNA');    sessionStorage.setItem(AVAIN+'id', muokattava_resepti['reseptiid']);}function siisti(data){    //siistii datadictia hieman    var tmp = {        reseptiid:data['tulokset'][0]['reseptiid'],        nimi:data['tulokset'][0]['nimi'],        kuvaus:data['tulokset'][0]['kuvaus'],        henkilomaara:data['tulokset'][0]['henkilomaara'],        ruokalajiid:data['tulokset'][0]['ruokalajiid'],        virhe:data['virhe']    };    return tmp;}function paivita_resepti_ajax(e){    //paivittaa reseptin tiedot.    e.preventDefault();    console.log("Aliohjelmassa 'paivita_resepti_ajax'");    var reseptin_id = sessionStorage.getItem(AVAIN+'id');    var resepti = {        nimi:$('input[name="reseptin_nimi"]').val(),        kuvaus:$('input[name="reseptin_kuvaus"]').val(),        henkilomaara:$('input[name="reseptin_henkilomaara"]').val(),        valittu:$('#Ruokalajitlista').val(),        reseptiid:reseptin_id,        aliohjelma:'PAIVITA'    }    console.log(resepti);    $.ajax({        async:true,        type:'POST',        url:URLA,        dataType:'json',        data:resepti,        beforeSend:img_show,    // jos tässä olisi sulkeet ei pelaisi        complete:img_hide,        success: tulos,        errror: ajax_virhe    });}function lisaa_resepti_ajax(e){    //lisää uuden reseptin tietokantaan.    e.preventDefault();    console.log('Pääsi aliohjelmaan "lisaa_resepti_ajax".');    var resepti = {        aliohjelma:'RESEPTI',        r_nimi:$('input[name="reseptin_nimi"]').val(),        r_kuvaus:$('input[name="reseptin_kuvaus"]').val(),        r_henkilomaara:$('input[name="reseptin_henkilomaara"]').val(),        valittu:$('#Ruokalajitlista').val()    }    console.log(resepti);    $.ajax({        async:true,        type:'POST',        url:URLA,        dataType:'json',        // something like this would be even better        // data: $("#lomake").serialize(),        // data: [ {name:'r_nimi', value:$('input[name="reseptin_nimi"]').val()},                // {name:'r_kuvaus', value:$('input[name="reseptin_kuvaus"]').val()},                // {name:'r_henkilomaara', value:$('input[name="reseptin_henkilomaara"]').val()}            // ],        data:resepti,        beforeSend:img_show,        complete:img_hide,        success: tulos,        error: ajax_virhe    });}//lisää vastauksenfunction tulos(data, textStatus, request){    console.log("Pääsi tulokseen.");    console.log(data);    if (data['virhe'] == "") {        $('#Lisaa_resepti_error').text("Tallennettu.");        tyhjenna();    }    else {        $('#Lisaa_resepti_error').text(data['virhe']);    }    hae_reseptit();}//hakee ruokalajitfunction hae_ruokalajit(e){    // e.preventDefault();    console.log('haki ruokalajit');    $.ajax({        async:true,        url:URLA+'hae_ruokalajit',        type:'GET',        dataType:'xml',        beforeSend:img_show,        complete:img_hide,        success: lisaa_reseptit_sivulle,        error: ajax_virhe    });}function hae_reseptit(e){    //hakee reseptit    // e.preventDefault();    console.log('haki reseptit');    $.ajax({        async:true,        url:URLA+'hae_reseptit',        type:'GET',        dataType:'xml',        beforeSend:img_show,        complete:img_hide,        success: lisaa_reseptit_sivulle,        error: ajax_virhe    });}function lisaa_reseptit_sivulle(data, textStatus, request){    /* Hakee reseptit sivulle */    var select = document.importNode(request.responseXML.documentElement, 1);    var id = select.getAttribute('id');       $('#' +id).replaceWith(select);    $('a').on('click', muokkaa_reseptia);    $('input[data-poista="poista"]').on('click',poista_resepti);    console.log("muokkaa_reseptia tapahtuma on lisätty linkeille.");}function poista_resepti(e){    e.preventDefault();    var id = $('this').attr('data-id');    console.log(id);    console.log(this);    $.ajax({        async:true,        url:URLA+'poista_resepti',        type:'POST',        dataType:'json',        data:{dataid:id},        beforeSend:img_show,        complete:img_hide,        success: poiston_tulos,        error: ajax_virhe    });}function poiston_tulos(data, textStatus, request){    console.log('poiston_tulos');    console.log(data['virhe']);    hae_reseptit();}function ajax_virhe(xhr, status, error) {        console.log( "Error: " + error );        console.log( "Status: " + status );        console.log( xhr );}